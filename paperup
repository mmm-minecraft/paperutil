#!/bin/sh

# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# For more information, please refer to <http://unlicense.org/>

echo_error () {
	printf '%s: %s\n' "${0##*/}" "$*" >&2
}

die () {
	local EXIT_CODE=1
	if [ "$1" -ge 0 ] 2>/dev/null
	then
		EXIT_CODE=$(($1))
		shift
	fi
	if [ -n "$1" ]
	then
		echo_error "$1"
	fi
	exit $EXIT_CODE
}

nonzero_or_die () {
	if [ -z "$1" ]
	then
		shift
		die "$@"
	fi
}

command_or_die () {
	while [ $# -gt 0 ]
	do
		nonzero_or_die "$(command -v "$1")" "$1: command not found"
		shift
	done
}

command_or_die perl

perl_package_or_die () {
	while [ $# -gt 0 ]
	do
		if perl -M"$1" -e '' 2>/dev/null
		then
			shift
			continue
		fi
		die "$1: perl package not found"
	done
}

command_or_die ln

case "$0" in
	*/*)
		if [ -x "${0%/*}/paperdl" ]
		then
			alias paperdl="${0%/*}/paperdl"
		else
			command_or_die paperdl
		fi
		;;
	*)
		command_or_die paperdl
esac

echo_usage () {
	printf 'usage: %s ' "${0##*/}"
	echo '[-link SYMBOLIC_LINK] -version VERSION [--] DESTINATION'
}
case "$1" in
	-h|-help|--help)
		echo_usage
		exit 0
		;;
esac

SYMBOLIC_LINK=
VERSION=
while [ $# -gt 0 ]
do
	case "$1" in
		-link)
			nonzero_or_die "$2" "$1: option requires an argument"
			SYMBOLIC_LINK="$2"
			;;
		-version)
			nonzero_or_die "$2" "$1: option requires an argument"
			VERSION="$2"
			shift 2
			;;
		--)
			shift
			break
			;;
		*)
			break
	esac
done
nonzero_or_die "$VERSION" "$(echo_usage)"

nonzero_or_die "$1" "$(echo_usage)"
DESTINATION="$1"

APPLICATION_NAME="$(paperdl -version "$VERSION" -- "$DESTINATION")"
EXIT_CODE=$?
if [ $EXIT_CODE -ne 0 ]
then
	exit $EXIT_CODE
fi

if [ -z "$SYMBOLIC_LINK" ]
then
	SYMBOLIC_LINK="paper-$VERSION-latest.jar"
fi
ln -fs -- "$APPLICATION_NAME" "$DESTINATION/$SYMBOLIC_LINK"

printf '%s\n' "$SYMBOLIC_LINK"
